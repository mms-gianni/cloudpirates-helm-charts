suite: test graphite common parameters
templates:
  - deployment.yaml
set:
  image:
    tag: 1.1.10-5
tests:
  - it: should use default values when nothing is overridden
    asserts:
      - equal:
          path: metadata.name
          value: RELEASE-NAME-graphite
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: graphite
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: RELEASE-NAME
      - equal:
          path: spec.template.spec.containers[0].image
          value: docker.io/graphiteapp/graphite-statsd:1.1.10-5
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: IfNotPresent

  - it: should respect global.imageRegistry override
    set:
      global:
        imageRegistry: "my-registry.com"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: my-registry.com/graphiteapp/graphite-statsd:1.1.10-5

  - it: should respect global.imagePullSecrets
    set:
      global:
        imagePullSecrets:
          - name: my-secret-1
          - name: my-secret-2
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: my-secret-1
      - equal:
          path: spec.template.spec.imagePullSecrets[1].name
          value: my-secret-2

  - it: should respect nameOverride
    set:
      nameOverride: "custom-name"
    asserts:
      - equal:
          path: metadata.name
          value: RELEASE-NAME-custom-name
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: custom-name

  - it: should respect fullnameOverride
    set:
      fullnameOverride: "completely-custom-name"
    asserts:
      - equal:
          path: metadata.name
          value: completely-custom-name

  - it: should add commonLabels to all resources
    set:
      commonLabels:
        environment: "test"
        team: "platform"
    asserts:
      - equal:
          path: metadata.labels.environment
          value: test
      - equal:
          path: metadata.labels.team
          value: platform

  - it: should add commonAnnotations to all resources
    set:
      commonAnnotations:
        deployment.kubernetes.io/revision: "1"
        prometheus.io/scrape: "true"
    asserts:
      - equal:
          path: metadata.annotations["deployment.kubernetes.io/revision"]
          value: "1"
      - equal:
          path: metadata.annotations["prometheus.io/scrape"]
          value: "true"

  - it: should respect image.registry override
    set:
      image:
        registry: "custom-registry.io"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: custom-registry.io/graphiteapp/graphite-statsd:1.1.10-5

  - it: should respect image.repository override
    set:
      image:
        repository: "custom/graphite"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: docker.io/custom/graphite:1.1.10-5

  - it: should respect image.tag override
    set:
      image:
        tag: "1.1.8-3"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: docker.io/graphiteapp/graphite-statsd:1.1.8-3

  - it: should respect image.imagePullPolicy override
    set:
      image:
        pullPolicy: "Always"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: Always

  - it: should configure ports correctly
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8080
      - equal:
          path: spec.template.spec.containers[0].ports[0].name
          value: webapp
      - equal:
          path: spec.template.spec.containers[0].ports[1].containerPort
          value: 2003
      - equal:
          path: spec.template.spec.containers[0].ports[1].name
          value: carbon

  - it: should configure environment variables
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: PYTHONUNBUFFERED
            value: "1"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GRAPHITE_TIME_ZONE
            value: UTC

  - it: should enable probes by default
    asserts:
      - isNotNull:
          path: spec.template.spec.containers[0].livenessProbe
      - isNotNull:
          path: spec.template.spec.containers[0].readinessProbe
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.port
          value: webapp
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.port
          value: webapp

  - it: should mount volumes correctly
    asserts:
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: graphite-storage
            mountPath: /opt/graphite/storage
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: carbon-config
            mountPath: /opt/graphite/conf/carbon.conf
            subPath: carbon.conf

  - it: should disable StatSD when configured
    set:
      config:
        statsd:
          enabled: false
    asserts:
      - notContains:
          path: spec.template.spec.containers[0].ports
          content:
            name: statsd
            containerPort: 8125
            protocol: UDP